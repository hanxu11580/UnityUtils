// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstask.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Datap {

  #region Enums
  /// <summary>
  /// ================= enum define =================
  /// </summary>
  public enum TaskMisc {
    KTaskMiscNone = 0,
  }

  public enum TaskType {
    /// <summary>
    /// 无
    /// </summary>
    KTaskTypeNone = 0,
    /// <summary>
    /// 主线
    /// </summary>
    KTaskTypeMainline = 1,
    /// <summary>
    /// 日常
    /// </summary>
    KTaskTypeDaily = 2,
    /// <summary>
    /// 周常
    /// </summary>
    KTaskTypeWeekly = 3,
  }

  public enum TaskProcessStatus {
    /// <summary>
    /// 任务状态
    /// </summary>
    InProgress = 0,
    /// <summary>
    /// 任务状态
    /// </summary>
    Done = 1,
    /// <summary>
    /// 任务状态
    /// </summary>
    GotAward = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ================= message define =================
  /// </summary>
  public sealed class Task : pb::IMessage {
    private static readonly pb::MessageParser<Task> _parser = new pb::MessageParser<Task>(() => new Task());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Task> Parser { get { return _parser; } }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Datap.TaskProcessStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.TaskProcessStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Datap.TaskProcessStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
