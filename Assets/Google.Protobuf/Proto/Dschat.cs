// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dschat.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Datap {

  #region Enums
  /// <summary>
  /// ================= enum define =================
  /// </summary>
  public enum ChatMisc {
    KChatMiscNone = 0,
    /// <summary>
    /// 消息发送的CD时间
    /// </summary>
    KChatMiscCdtime = 10,
    /// <summary>
    /// 文本内容字数上限
    /// </summary>
    KChatMiscTextLength = 30,
    /// <summary>
    /// 发言的解锁主线进度
    /// </summary>
    KChatMiscSpeakUnlockChapter = 5,
    /// <summary>
    /// 世界频道存储消息条目上限
    /// </summary>
    KChatMiscMsgMaxLengthWorld = 1024,
    /// <summary>
    /// 本服群聊存储消息条目上限
    /// </summary>
    KChatMiscMsgMaxLengthSvr = 1024,
  }

  public enum RoleInfoUpdateReason {
    KRoleInfoUpdateReasonNone = 0,
    /// <summary>
    /// 禁言相关
    /// </summary>
    KRoleInfoUpdateReasonBan = 1,
    /// <summary>
    /// 主线战斗通关
    /// </summary>
    KRoleInfoUpdateReasonStagePass = 2,
    /// <summary>
    /// 改名
    /// </summary>
    KRoleInfoUpdateReasonRename = 3,
    /// <summary>
    /// 登录
    /// </summary>
    KRoleInfoUpdateReasonLogin = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ================= message define =================
  /// </summary>
  public sealed class RoleDataBaseForChat : pb::IMessage {
    private static readonly pb::MessageParser<RoleDataBaseForChat> _parser = new pb::MessageParser<RoleDataBaseForChat>(() => new RoleDataBaseForChat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleDataBaseForChat> Parser { get { return _parser; } }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class RoleDataBattleForChat : pb::IMessage {
    private static readonly pb::MessageParser<RoleDataBattleForChat> _parser = new pb::MessageParser<RoleDataBattleForChat>(() => new RoleDataBattleForChat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleDataBattleForChat> Parser { get { return _parser; } }

    /// <summary>Field number for the "stage_max_finished_chapter_id" field.</summary>
    public const int StageMaxFinishedChapterIdFieldNumber = 1;
    private int stageMaxFinishedChapterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StageMaxFinishedChapterId {
      get { return stageMaxFinishedChapterId_; }
      set {
        stageMaxFinishedChapterId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StageMaxFinishedChapterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StageMaxFinishedChapterId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StageMaxFinishedChapterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StageMaxFinishedChapterId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            StageMaxFinishedChapterId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class RoleDataOtherForChat : pb::IMessage {
    private static readonly pb::MessageParser<RoleDataOtherForChat> _parser = new pb::MessageParser<RoleDataOtherForChat>(() => new RoleDataOtherForChat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleDataOtherForChat> Parser { get { return _parser; } }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 1;
    private global::Datap.RoleChatInfo ban_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.RoleChatInfo Ban {
      get { return ban_; }
      set {
        ban_ = value;
      }
    }

    /// <summary>Field number for the "battle" field.</summary>
    public const int BattleFieldNumber = 2;
    private global::Datap.RoleDataBattleForChat battle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.RoleDataBattleForChat Battle {
      get { return battle_; }
      set {
        battle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ban_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ban);
      }
      if (battle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Battle);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ban_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ban);
      }
      if (battle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Battle);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (ban_ == null) {
              ban_ = new global::Datap.RoleChatInfo();
            }
            input.ReadMessage(ban_);
            break;
          }
          case 18: {
            if (battle_ == null) {
              battle_ = new global::Datap.RoleDataBattleForChat();
            }
            input.ReadMessage(battle_);
            break;
          }
        }
      }
    }

  }

  public sealed class RoleDataBriefForChat : pb::IMessage {
    private static readonly pb::MessageParser<RoleDataBriefForChat> _parser = new pb::MessageParser<RoleDataBriefForChat>(() => new RoleDataBriefForChat());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleDataBriefForChat> Parser { get { return _parser; } }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 2;
    private global::Datap.RoleDataBaseForChat base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.RoleDataBaseForChat Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "other" field.</summary>
    public const int OtherFieldNumber = 3;
    private global::Datap.RoleDataOtherForChat other_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.RoleDataOtherForChat Other {
      get { return other_; }
      set {
        other_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (base_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Base);
      }
      if (other_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Other);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (other_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Other);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            if (base_ == null) {
              base_ = new global::Datap.RoleDataBaseForChat();
            }
            input.ReadMessage(base_);
            break;
          }
          case 26: {
            if (other_ == null) {
              other_ = new global::Datap.RoleDataOtherForChat();
            }
            input.ReadMessage(other_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
