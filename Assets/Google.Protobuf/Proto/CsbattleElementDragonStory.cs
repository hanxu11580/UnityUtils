// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csbattle_element_dragon_story.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Csp {

  #region Messages
  /// <summary>
  ///========== struct define ==========
  /// </summary>
  public sealed class CSElementDragonStoryItem : pb::IMessage {
    private static readonly pb::MessageParser<CSElementDragonStoryItem> _parser = new pb::MessageParser<CSElementDragonStoryItem>(() => new CSElementDragonStoryItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSElementDragonStoryItem> Parser { get { return _parser; } }

    /// <summary>Field number for the "has_passed" field.</summary>
    public const int HasPassedFieldNumber = 1;
    private bool hasPassed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassed {
      get { return hasPassed_; }
      set {
        hasPassed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasPassed != false) {
        output.WriteRawTag(8);
        output.WriteBool(HasPassed);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPassed != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            HasPassed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed class CSElementDragonStoryStateResp : pb::IMessage {
    private static readonly pb::MessageParser<CSElementDragonStoryStateResp> _parser = new pb::MessageParser<CSElementDragonStoryStateResp>(() => new CSElementDragonStoryStateResp());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSElementDragonStoryStateResp> Parser { get { return _parser; } }

    /// <summary>Field number for the "element_dragon_story_data" field.</summary>
    public const int ElementDragonStoryDataFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Datap.RoleElementDragonStoryItem>.Codec _map_elementDragonStoryData_codec
        = new pbc::MapField<int, global::Datap.RoleElementDragonStoryItem>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Datap.RoleElementDragonStoryItem.Parser), 10);
    private readonly pbc::MapField<int, global::Datap.RoleElementDragonStoryItem> elementDragonStoryData_ = new pbc::MapField<int, global::Datap.RoleElementDragonStoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Datap.RoleElementDragonStoryItem> ElementDragonStoryData {
      get { return elementDragonStoryData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elementDragonStoryData_.WriteTo(output, _map_elementDragonStoryData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elementDragonStoryData_.CalculateSize(_map_elementDragonStoryData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            elementDragonStoryData_.AddEntriesFrom(input, _map_elementDragonStoryData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class CSElementDragonStoryFinishReq : pb::IMessage {
    private static readonly pb::MessageParser<CSElementDragonStoryFinishReq> _parser = new pb::MessageParser<CSElementDragonStoryFinishReq>(() => new CSElementDragonStoryFinishReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSElementDragonStoryFinishReq> Parser { get { return _parser; } }

    /// <summary>Field number for the "element_dragon_id" field.</summary>
    public const int ElementDragonIdFieldNumber = 1;
    private int elementDragonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElementDragonId {
      get { return elementDragonId_; }
      set {
        elementDragonId_ = value;
      }
    }

    /// <summary>Field number for the "wave_defeated_num" field.</summary>
    public const int WaveDefeatedNumFieldNumber = 2;
    private int waveDefeatedNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaveDefeatedNum {
      get { return waveDefeatedNum_; }
      set {
        waveDefeatedNum_ = value;
      }
    }

    /// <summary>Field number for the "boss_defeated_num" field.</summary>
    public const int BossDefeatedNumFieldNumber = 3;
    private int bossDefeatedNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BossDefeatedNum {
      get { return bossDefeatedNum_; }
      set {
        bossDefeatedNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ElementDragonId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ElementDragonId);
      }
      if (WaveDefeatedNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WaveDefeatedNum);
      }
      if (BossDefeatedNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BossDefeatedNum);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ElementDragonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementDragonId);
      }
      if (WaveDefeatedNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaveDefeatedNum);
      }
      if (BossDefeatedNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BossDefeatedNum);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ElementDragonId = input.ReadInt32();
            break;
          }
          case 16: {
            WaveDefeatedNum = input.ReadInt32();
            break;
          }
          case 24: {
            BossDefeatedNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed class CSElementDragonStoryFinishResp : pb::IMessage {
    private static readonly pb::MessageParser<CSElementDragonStoryFinishResp> _parser = new pb::MessageParser<CSElementDragonStoryFinishResp>(() => new CSElementDragonStoryFinishResp());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSElementDragonStoryFinishResp> Parser { get { return _parser; } }

    /// <summary>Field number for the "element_dragon_id" field.</summary>
    public const int ElementDragonIdFieldNumber = 1;
    private int elementDragonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElementDragonId {
      get { return elementDragonId_; }
      set {
        elementDragonId_ = value;
      }
    }

    /// <summary>Field number for the "wave_defeated_num" field.</summary>
    public const int WaveDefeatedNumFieldNumber = 2;
    private int waveDefeatedNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaveDefeatedNum {
      get { return waveDefeatedNum_; }
      set {
        waveDefeatedNum_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Datap.RandAward> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(26, global::Datap.RandAward.Parser);
    private readonly pbc::RepeatedField<global::Datap.RandAward> awards_ = new pbc::RepeatedField<global::Datap.RandAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Datap.RandAward> Awards {
      get { return awards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ElementDragonId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ElementDragonId);
      }
      if (WaveDefeatedNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WaveDefeatedNum);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ElementDragonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElementDragonId);
      }
      if (WaveDefeatedNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaveDefeatedNum);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ElementDragonId = input.ReadInt32();
            break;
          }
          case 16: {
            WaveDefeatedNum = input.ReadInt32();
            break;
          }
          case 26: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
