// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dsbattle_element_dragon_story.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Datap {

  #region Enums
  /// <summary>
  /// ================= enum define =================
  /// </summary>
  public enum DragonStoryMisc {
    /// <summary>
    /// None
    /// </summary>
    KDragonStoryMisc = 0,
    /// <summary>
    /// 元素龙种类数上限
    /// </summary>
    KMaxDragonTypes = 10,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ================= message define =================
  /// </summary>
  public sealed class RoleElementDragonStoryItem : pb::IMessage {
    private static readonly pb::MessageParser<RoleElementDragonStoryItem> _parser = new pb::MessageParser<RoleElementDragonStoryItem>(() => new RoleElementDragonStoryItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleElementDragonStoryItem> Parser { get { return _parser; } }

    /// <summary>Field number for the "is_playing" field.</summary>
    public const int IsPlayingFieldNumber = 1;
    private bool isPlaying_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlaying {
      get { return isPlaying_; }
      set {
        isPlaying_ = value;
      }
    }

    /// <summary>Field number for the "has_passed" field.</summary>
    public const int HasPassedFieldNumber = 2;
    private bool hasPassed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPassed {
      get { return hasPassed_; }
      set {
        hasPassed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsPlaying != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsPlaying);
      }
      if (HasPassed != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasPassed);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsPlaying != false) {
        size += 1 + 1;
      }
      if (HasPassed != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsPlaying = input.ReadBool();
            break;
          }
          case 16: {
            HasPassed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed class RoleElementDragonStoryData : pb::IMessage {
    private static readonly pb::MessageParser<RoleElementDragonStoryData> _parser = new pb::MessageParser<RoleElementDragonStoryData>(() => new RoleElementDragonStoryData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoleElementDragonStoryData> Parser { get { return _parser; } }

    /// <summary>Field number for the "element_dragon_story_data" field.</summary>
    public const int ElementDragonStoryDataFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Datap.RoleElementDragonStoryItem>.Codec _map_elementDragonStoryData_codec
        = new pbc::MapField<int, global::Datap.RoleElementDragonStoryItem>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Datap.RoleElementDragonStoryItem.Parser), 10);
    private readonly pbc::MapField<int, global::Datap.RoleElementDragonStoryItem> elementDragonStoryData_ = new pbc::MapField<int, global::Datap.RoleElementDragonStoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Datap.RoleElementDragonStoryItem> ElementDragonStoryData {
      get { return elementDragonStoryData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      elementDragonStoryData_.WriteTo(output, _map_elementDragonStoryData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += elementDragonStoryData_.CalculateSize(_map_elementDragonStoryData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            elementDragonStoryData_.AddEntriesFrom(input, _map_elementDragonStoryData_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
