// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dsmisc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Datap {

  #region Enums
  /// <summary>
  /// ================= enum define =================
  /// </summary>
  public enum ConditionMisc {
    KConditionMiscNone = 0,
    KConditionMiscMaxParamNum = 3,
    KConditionMiscMaxConditionNum = 64,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ================= message define =================
  /// </summary>
  public sealed class ConditionItem : pb::IMessage {
    private static readonly pb::MessageParser<ConditionItem> _parser = new pb::MessageParser<ConditionItem>(() => new ConditionItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConditionItem> Parser { get { return _parser; } }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_item_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> item_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      item_.WriteTo(output, _repeated_item_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class ConditionList : pb::IMessage {
    private static readonly pb::MessageParser<ConditionList> _parser = new pb::MessageParser<ConditionList>(() => new ConditionList());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConditionList> Parser { get { return _parser; } }

    /// <summary>Field number for the "condition_items" field.</summary>
    public const int ConditionItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Datap.ConditionItem> _repeated_conditionItems_codec
        = pb::FieldCodec.ForMessage(10, global::Datap.ConditionItem.Parser);
    private readonly pbc::RepeatedField<global::Datap.ConditionItem> conditionItems_ = new pbc::RepeatedField<global::Datap.ConditionItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Datap.ConditionItem> ConditionItems {
      get { return conditionItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      conditionItems_.WriteTo(output, _repeated_conditionItems_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conditionItems_.CalculateSize(_repeated_conditionItems_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            conditionItems_.AddEntriesFrom(input, _repeated_conditionItems_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
