// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csactivity.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Csp {

  #region Enums
  /// <summary>
  ///========== enum define ==========
  /// </summary>
  public enum CSActivityStatus {
    KCsactivityStatusNone = 0,
    /// <summary>
    /// 未开放
    /// </summary>
    KCsactivityStatusToOpen = 1,
    /// <summary>
    /// 已开放
    /// </summary>
    KCsactivityStatusOpen = 2,
    /// <summary>
    /// 已关闭
    /// </summary>
    KCsactivityStatusToClear = 3,
    /// <summary>
    /// 已冻结
    /// </summary>
    KCsactivityStatusClear = 4,
    /// <summary>
    /// Max
    /// </summary>
    KCsactivityStatusMax = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  ///========== struct define ==========
  /// </summary>
  public sealed class CSActivityInfo : pb::IMessage {
    private static readonly pb::MessageParser<CSActivityInfo> _parser = new pb::MessageParser<CSActivityInfo>(() => new CSActivityInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSActivityInfo> Parser { get { return _parser; } }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Csp.CSActivityStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Csp.CSActivityStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            status_ = (global::Csp.CSActivityStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///========== proto define ==========
  /// </summary>
  public sealed class CSActivityOnReq : pb::IMessage {
    private static readonly pb::MessageParser<CSActivityOnReq> _parser = new pb::MessageParser<CSActivityOnReq>(() => new CSActivityOnReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSActivityOnReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed class CSActivityOnNotify : pb::IMessage {
    private static readonly pb::MessageParser<CSActivityOnNotify> _parser = new pb::MessageParser<CSActivityOnNotify>(() => new CSActivityOnNotify());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSActivityOnNotify> Parser { get { return _parser; } }

    /// <summary>Field number for the "activity_list" field.</summary>
    public const int ActivityListFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Csp.CSActivityInfo>.Codec _map_activityList_codec
        = new pbc::MapField<int, global::Csp.CSActivityInfo>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Csp.CSActivityInfo.Parser), 10);
    private readonly pbc::MapField<int, global::Csp.CSActivityInfo> activityList_ = new pbc::MapField<int, global::Csp.CSActivityInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Csp.CSActivityInfo> ActivityList {
      get { return activityList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activityList_.WriteTo(output, _map_activityList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activityList_.CalculateSize(_map_activityList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            activityList_.AddEntriesFrom(input, _map_activityList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
