// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dspushgift.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::ILRuntime.Protobuf;
using pbc = global::ILRuntime.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Datap {

  #region Enums
  /// <summary>
  /// ================= enum define =================
  /// </summary>
  public enum PushGiftMisc {
    KPushGiftMiscNone = 0,
    KPushGiftMiscMaxTriggeredConditionNum = 1000,
    KPushGiftMiscMaxPushGiftNum = 32,
  }

  #endregion

  #region Messages
  /// <summary>
  /// ================= message define =================
  /// </summary>
  public sealed class PushGiftTriggeredCondition : pb::IMessage {
    private static readonly pb::MessageParser<PushGiftTriggeredCondition> _parser = new pb::MessageParser<PushGiftTriggeredCondition>(() => new PushGiftTriggeredCondition());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushGiftTriggeredCondition> Parser { get { return _parser; } }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Datap.ConditionList>.Codec _map_condition_codec
        = new pbc::MapField<int, global::Datap.ConditionList>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Datap.ConditionList.Parser), 10);
    private readonly pbc::MapField<int, global::Datap.ConditionList> condition_ = new pbc::MapField<int, global::Datap.ConditionList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Datap.ConditionList> Condition {
      get { return condition_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      condition_.WriteTo(output, _map_condition_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += condition_.CalculateSize(_map_condition_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            condition_.AddEntriesFrom(input, _map_condition_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class PushGiftItem : pb::IMessage {
    private static readonly pb::MessageParser<PushGiftItem> _parser = new pb::MessageParser<PushGiftItem>(() => new PushGiftItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushGiftItem> Parser { get { return _parser; } }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 2;
    private long tick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Tick != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Tick);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Tick != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Tick);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Tick = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed class PushGift : pb::IMessage {
    private static readonly pb::MessageParser<PushGift> _parser = new pb::MessageParser<PushGift>(() => new PushGift());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushGift> Parser { get { return _parser; } }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Datap.PushGiftItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Datap.PushGiftItem.Parser);
    private readonly pbc::RepeatedField<global::Datap.PushGiftItem> items_ = new pbc::RepeatedField<global::Datap.PushGiftItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Datap.PushGiftItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed class RolePushGift : pb::IMessage {
    private static readonly pb::MessageParser<RolePushGift> _parser = new pb::MessageParser<RolePushGift>(() => new RolePushGift());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RolePushGift> Parser { get { return _parser; } }

    /// <summary>Field number for the "triggered_condition" field.</summary>
    public const int TriggeredConditionFieldNumber = 1;
    private global::Datap.PushGiftTriggeredCondition triggeredCondition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.PushGiftTriggeredCondition TriggeredCondition {
      get { return triggeredCondition_; }
      set {
        triggeredCondition_ = value;
      }
    }

    /// <summary>Field number for the "gift" field.</summary>
    public const int GiftFieldNumber = 2;
    private global::Datap.PushGift gift_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Datap.PushGift Gift {
      get { return gift_; }
      set {
        gift_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (triggeredCondition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TriggeredCondition);
      }
      if (gift_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Gift);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (triggeredCondition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TriggeredCondition);
      }
      if (gift_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gift);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (triggeredCondition_ == null) {
              triggeredCondition_ = new global::Datap.PushGiftTriggeredCondition();
            }
            input.ReadMessage(triggeredCondition_);
            break;
          }
          case 18: {
            if (gift_ == null) {
              gift_ = new global::Datap.PushGift();
            }
            input.ReadMessage(gift_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
